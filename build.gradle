/*
 * Copyright 2024 Jeroen Gremmen
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id 'java-library'
  id 'com.gradle.plugin-publish' version '1.2.1'
  id 'maven-publish'
  id 'signing'
}


layout.buildDirectory = '.build'


description = 'Repackage Gradle Plugin'
group = 'de.sayayi.plugin.gradle'
version = '0.1'


java {
  withSourcesJar()
}


repositories {
  mavenCentral()
}


def asmVersion = '[9.0,10.0)'
def junitVersion = '5.11.+'
def lombokVersion = '1.18.+'


dependencies {
  annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
  compileOnly "org.projectlombok:lombok:${lombokVersion}"

  api gradleApi()

  implementation "org.ow2.asm:asm:${asmVersion}"
  implementation "org.ow2.asm:asm-commons:${asmVersion}"

  implementation 'org.apache.ant:ant:1.10.14'
  implementation 'org.apache.commons:commons-compress:1.27.0'

  implementation 'org.codehaus.plexus:plexus-utils:4.0.2'


  testImplementation gradleTestKit()

  testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
  testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"

  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
  testRuntimeOnly "org.junit.platform:junit-platform-launcher"
}


configurations {
  testAnnotationProcessor.extendsFrom annotationProcessor
  testCompileOnly.extendsFrom compileOnly
}


jar {
  archiveBaseName = 'repackage-gradle-plugin'
}


tasks.withType(JavaCompile).configureEach {
  javaCompiler = javaToolchains.compilerFor {
    languageVersion = JavaLanguageVersion.of(11)
  }

  options.encoding = 'UTF-8'
}


tasks.withType(Test).configureEach {
  javaLauncher = javaToolchains.launcherFor {
    languageVersion = JavaLanguageVersion.of(11)
  }

  defaultCharacterEncoding = 'UTF-8'
}


compileJava {
  sourceCompatibility = 11
  targetCompatibility = 11
}


compileTestJava {
  sourceCompatibility = 11
  targetCompatibility = 11
}


test {
  useJUnitPlatform()
}


gradlePlugin {
  website = 'https://github.com/jgremmen/repackage'
  vcsUrl = 'https://github.com/jgremmen/repackage'

  plugins {
    create('repackage') {
      id = 'de.sayayi.plugin.gradle.repackage'
      displayName = 'Repackage Gradle Plugin'
      description = 'Repackage classes and java libraries.'
      implementationClass = 'de.sayayi.plugin.gradle.repackage.RepackagePlugin'
      tags.set(['sayayi', 'repackage'])
    }
  }
}


def snapshot = version.toString().endsWith('-SNAPSHOT')
def tmpRepositoryDirectory = rootProject.layout.buildDirectory
    .dir('repository').get()
    .dir(snapshot ? 'snapshot' : 'release')
    .asFile

publishing {
  repositories {
    maven {
      name = 'mavenTemp'
      url = tmpRepositoryDirectory
    }

    maven {
      name = "jfrogArtifactory"
      url = snapshot
          ? "https://artifactory.sayayi.de/artifactory/plugins-snapshot/"
          : "https://artifactory.sayayi.de/artifactory/plugins-release/"
      credentials {
        username property('artifactory.username')
        password property('artifactory.password')
      }
      authentication {
        digest(DigestAuthentication)
      }
    }
  }

  publications {
    gradlePlugin(MavenPublication) {
      from components.java

      pom {
        name = 'Repackage Gradle Plugin'
        description = 'Repackage classes and java libraries.'
        inceptionYear = '2024'

        licenses {
          license {
            name = 'Apache License, Version 2.0'
            url = 'https://www.apache.org/licenses/LICENSE-2.0'
            distribution = 'repo'
          }
        }

        developers {
          developer {
            id = 'jgremmen'
            name = 'Jeroen Gremmen'
            email = 'jeroen.gremmen@sayayi.de'
          }
        }
      }
    }
  }
}


signing {
  sign publishing.publications.gradlePlugin
}


publishGradlePluginPublicationToJfrogArtifactoryRepository.dependsOn 'signPluginMavenPublication'

afterEvaluate {
  publishPluginMavenPublicationToJfrogArtifactoryRepository.dependsOn 'signGradlePluginPublication'
}